The system is: Windows - 10.0.18363 - AMD64
Compiling the C compiler identification source file "CMakeCCompilerId.c" succeeded.
Compiler: C:/Program Files (x86)/Microsoft Visual Studio/2019/Enterprise/VC/Tools/MSVC/14.28.29333/bin/Hostx64/x64/cl.exe 
Build flags: 
Id flags:  

The output was:
0
Microsoft (R) C/C++ Optimizing Compiler Version 19.28.29334 for x64
Copyright (C) Microsoft Corporation.  All rights reserved.

CMakeCCompilerId.c
Microsoft (R) Incremental Linker Version 14.28.29334.0
Copyright (C) Microsoft Corporation.  All rights reserved.

/out:CMakeCCompilerId.exe 
CMakeCCompilerId.obj 


Compilation of the C compiler identification source "CMakeCCompilerId.c" produced "CMakeCCompilerId.exe"

Compilation of the C compiler identification source "CMakeCCompilerId.c" produced "CMakeCCompilerId.obj"

The C compiler identification is MSVC, found in "D:/RagnarokPrivateServer/rathena/out/build/x64-Debug (default)/CMakeFiles/3.18.20081302-MSVC_2/CompilerIdC/CMakeCCompilerId.exe"

Compiling the CXX compiler identification source file "CMakeCXXCompilerId.cpp" succeeded.
Compiler: C:/Program Files (x86)/Microsoft Visual Studio/2019/Enterprise/VC/Tools/MSVC/14.28.29333/bin/Hostx64/x64/cl.exe 
Build flags: 
Id flags:  

The output was:
0
Microsoft (R) C/C++ Optimizing Compiler Version 19.28.29334 for x64
Copyright (C) Microsoft Corporation.  All rights reserved.

CMakeCXXCompilerId.cpp
Microsoft (R) Incremental Linker Version 14.28.29334.0
Copyright (C) Microsoft Corporation.  All rights reserved.

/out:CMakeCXXCompilerId.exe 
CMakeCXXCompilerId.obj 


Compilation of the CXX compiler identification source "CMakeCXXCompilerId.cpp" produced "CMakeCXXCompilerId.exe"

Compilation of the CXX compiler identification source "CMakeCXXCompilerId.cpp" produced "CMakeCXXCompilerId.obj"

The CXX compiler identification is MSVC, found in "D:/RagnarokPrivateServer/rathena/out/build/x64-Debug (default)/CMakeFiles/3.18.20081302-MSVC_2/CompilerIdCXX/CMakeCXXCompilerId.exe"

Detecting C compiler ABI info compiled with the following output:
Change Dir: D:/RagnarokPrivateServer/rathena/out/build/x64-Debug (default)/CMakeFiles/CMakeTmp

Run Build Command(s):C:/Program Files (x86)/Microsoft Visual Studio/2019/Enterprise/Common7/IDE/CommonExtensions/Microsoft/CMake/Ninja/ninja.exe cmTC_5631a && [1/2] Building C object CMakeFiles\cmTC_5631a.dir\CMakeCCompilerABI.c.obj
[2/2] Linking C executable cmTC_5631a.exe



Detecting CXX compiler ABI info compiled with the following output:
Change Dir: D:/RagnarokPrivateServer/rathena/out/build/x64-Debug (default)/CMakeFiles/CMakeTmp

Run Build Command(s):C:/Program Files (x86)/Microsoft Visual Studio/2019/Enterprise/Common7/IDE/CommonExtensions/Microsoft/CMake/Ninja/ninja.exe cmTC_767e1 && [1/2] Building CXX object CMakeFiles\cmTC_767e1.dir\CMakeCXXCompilerABI.cpp.obj
[2/2] Linking CXX executable cmTC_767e1.exe



Determining if the include file sys/types.h exists passed with the following output:
Change Dir: D:/RagnarokPrivateServer/rathena/out/build/x64-Debug (default)/CMakeFiles/CMakeTmp

Run Build Command(s):C:/Program Files (x86)/Microsoft Visual Studio/2019/Enterprise/Common7/IDE/CommonExtensions/Microsoft/CMake/Ninja/ninja.exe cmTC_e510a && [1/2] Building C object CMakeFiles\cmTC_e510a.dir\CheckIncludeFile.c.obj
[2/2] Linking C executable cmTC_e510a.exe



Determining if the include file stdint.h exists passed with the following output:
Change Dir: D:/RagnarokPrivateServer/rathena/out/build/x64-Debug (default)/CMakeFiles/CMakeTmp

Run Build Command(s):C:/Program Files (x86)/Microsoft Visual Studio/2019/Enterprise/Common7/IDE/CommonExtensions/Microsoft/CMake/Ninja/ninja.exe cmTC_ab115 && [1/2] Building C object CMakeFiles\cmTC_ab115.dir\CheckIncludeFile.c.obj
[2/2] Linking C executable cmTC_ab115.exe



Determining if the include file stddef.h exists passed with the following output:
Change Dir: D:/RagnarokPrivateServer/rathena/out/build/x64-Debug (default)/CMakeFiles/CMakeTmp

Run Build Command(s):C:/Program Files (x86)/Microsoft Visual Studio/2019/Enterprise/Common7/IDE/CommonExtensions/Microsoft/CMake/Ninja/ninja.exe cmTC_27299 && [1/2] Building C object CMakeFiles\cmTC_27299.dir\CheckIncludeFile.c.obj
[2/2] Linking C executable cmTC_27299.exe



Determining size of unsigned short passed with the following output:
Change Dir: D:/RagnarokPrivateServer/rathena/out/build/x64-Debug (default)/CMakeFiles/CMakeTmp

Run Build Command(s):C:/Program Files (x86)/Microsoft Visual Studio/2019/Enterprise/Common7/IDE/CommonExtensions/Microsoft/CMake/Ninja/ninja.exe cmTC_d1543 && [1/2] Building C object CMakeFiles\cmTC_d1543.dir\CMAKE_SIZEOF_UNSIGNED_SHORT.c.obj
[2/2] Linking C executable cmTC_d1543.exe



Determining if the system is big endian passed with the following output:
Change Dir: D:/RagnarokPrivateServer/rathena/out/build/x64-Debug (default)/CMakeFiles/CMakeTmp

Run Build Command(s):C:/Program Files (x86)/Microsoft Visual Studio/2019/Enterprise/Common7/IDE/CommonExtensions/Microsoft/CMake/Ninja/ninja.exe cmTC_79b75 && [1/2] Building C object CMakeFiles\cmTC_79b75.dir\TestEndianess.c.obj
[2/2] Linking C executable cmTC_79b75.exe


TestEndianess.c:
/* A 16 bit integer is required. */
typedef unsigned short cmakeint16;

/* On a little endian machine, these 16bit ints will give "THIS IS LITTLE ENDIAN."
   On a big endian machine the characters will be exchanged pairwise. */
const cmakeint16 info_little[] =  {0x4854, 0x5349, 0x4920, 0x2053, 0x494c, 0x5454, 0x454c, 0x4520, 0x444e, 0x4149, 0x2e4e, 0x0000};

/* on a big endian machine, these 16bit ints will give "THIS IS BIG ENDIAN."
   On a little endian machine the characters will be exchanged pairwise. */
const cmakeint16 info_big[] =     {0x5448, 0x4953, 0x2049, 0x5320, 0x4249, 0x4720, 0x454e, 0x4449, 0x414e, 0x2e2e, 0x0000};

#ifdef __CLASSIC_C__
int main(argc, argv) int argc; char *argv[];
#else
int main(int argc, char *argv[])
#endif
{
  int require = 0;
  require += info_little[argc];
  require += info_big[argc];
  (void)argv;
  return require;
}


Determining if the function strnlen exists passed with the following output:
Change Dir: D:/RagnarokPrivateServer/rathena/out/build/x64-Debug (default)/CMakeFiles/CMakeTmp

Run Build Command(s):C:/Program Files (x86)/Microsoft Visual Studio/2019/Enterprise/Common7/IDE/CommonExtensions/Microsoft/CMake/Ninja/ninja.exe cmTC_bdacd && [1/2] Building C object CMakeFiles\cmTC_bdacd.dir\CheckFunctionExists.c.obj
[2/2] Linking C executable cmTC_bdacd.exe



Determining if the function getpid exists passed with the following output:
Change Dir: D:/RagnarokPrivateServer/rathena/out/build/x64-Debug (default)/CMakeFiles/CMakeTmp

Run Build Command(s):C:/Program Files (x86)/Microsoft Visual Studio/2019/Enterprise/Common7/IDE/CommonExtensions/Microsoft/CMake/Ninja/ninja.exe cmTC_4fcb2 && [1/2] Building C object CMakeFiles\cmTC_4fcb2.dir\CheckFunctionExists.c.obj
[2/2] Linking C executable cmTC_4fcb2.exe



